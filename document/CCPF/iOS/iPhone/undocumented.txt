SwiftyJSON.swift
	public let ErrorIndexOutOfBounds: Int! = 900
	public let ErrorWrongType: Int! = 901
	public let ErrorNotExist: Int! = 500
	public struct JSON
	public struct JSON
	public struct JSON
	public struct JSON
	public init(stringLiteral value: StringLiteralType)
	public init(extendedGraphemeClusterLiteral value: StringLiteralType)
	public init(unicodeScalarLiteral value: StringLiteralType)
	public struct JSON
	public init(integerLiteral value: IntegerLiteralType)
	public struct JSON
	public init(booleanLiteral value: BooleanLiteralType)
	public struct JSON
	public init(floatLiteral value: FloatLiteralType)
	public struct JSON
	public init(dictionaryLiteral elements: (String, AnyObject)...)
	public struct JSON
	public init(arrayLiteral elements: AnyObject...)
	public struct JSON
	public init(nilLiteral: ())
	public struct JSON
	public init?(rawValue: AnyObject)
	public var rawValue: AnyObject
	public func rawData(options opt: NSJSONWritingOptions = NSJSONWritingOptions(0), error: NSErrorPointer = nil) -> NSData?
	public func rawString(encoding: UInt = NSUTF8StringEncoding, options opt: NSJSONWritingOptions = .PrettyPrinted) -> String?
	public struct JSON
	public var description: String
	public var debugDescription: String
	public struct JSON
	public var array: [JSON]?
	public var arrayValue: [JSON]
	public var arrayObject: [AnyObject]?
	public struct JSON
	public var dictionary: [String : JSON]?
	public var dictionaryValue: [String : JSON]
	public var dictionaryObject: [String : AnyObject]?
	public struct JSON
	public var bool: Bool?
	public var boolValue: Bool
	public struct JSON
	public var string: String?
	public var stringValue: String
	public struct JSON
	public var number: NSNumber?
	public var numberValue: NSNumber
	public struct JSON
	public var null: NSNull?
	public struct JSON
	public var URL: NSURL?
	public struct JSON
	public var double: Double?
	public var doubleValue: Double
	public var float: Float?
	public var floatValue: Float
	public var int: Int?
	public var intValue: Int
	public var uInt: UInt?
	public var uIntValue: UInt
	public var int8: Int8?
	public var int8Value: Int8
	public var uInt8: UInt8?
	public var uInt8Value: UInt8
	public var int16: Int16?
	public var int16Value: Int16
	public var uInt16: UInt16?
	public var uInt16Value: UInt16
	public var int32: Int32?
	public var int32Value: Int32
	public var uInt32: UInt32?
	public var uInt32Value: UInt32
	public var int64: Int64?
	public var int64Value: Int64
	public var uInt64: UInt64?
	public var uInt64Value: UInt64
	public struct JSON
	public func ==(lhs: JSON, rhs: JSON) -> Bool
	public func <=(lhs: JSON, rhs: JSON) -> Bool
	public func >=(lhs: JSON, rhs: JSON) -> Bool
	public func >(lhs: JSON, rhs: JSON) -> Bool
	public func <(lhs: JSON, rhs: JSON) -> Bool
	public func ==(lhs: NSNumber, rhs: NSNumber) -> Bool
	public func !=(lhs: NSNumber, rhs: NSNumber) -> Bool
	public func <(lhs: NSNumber, rhs: NSNumber) -> Bool
	public func >(lhs: NSNumber, rhs: NSNumber) -> Bool
	public func <=(lhs: NSNumber, rhs: NSNumber) -> Bool
	public func >=(lhs: NSNumber, rhs: NSNumber) -> Bool
	public struct JSON
	public init(object: AnyObject)
	public var dictionaryObjects: [String : AnyObject]?
	public var arrayObjects: [AnyObject]?
	public var char: Int8?
	public var charValue: Int8
	public var unsignedChar: UInt8?
	public var unsignedCharValue: UInt8
	public var short: Int16?
	public var shortValue: Int16
	public var unsignedShort: UInt16?
	public var unsignedShortValue: UInt16
	public var long: Int?
	public var longValue: Int
	public var unsignedLong: UInt?
	public var unsignedLongValue: UInt
	public var longLong: Int64?
	public var longLongValue: Int64
	public var unsignedLongLong: UInt64?
	public var unsignedLongLongValue: UInt64
	public var integer: Int?
	public var integerValue: Int
	public var unsignedInteger: Int?
	public var unsignedIntegerValue: Int
